{"version":3,"sources":["index.js"],"names":["App","graphRef","useRef","datas","setDatas","useState","data","setData","nodes","id","name","label","title","shape","image","size","cost","color","edges","from","to","options","interaction","selectable","hover","manipulation","enabled","initiallyActive","addNode","addEdge","editNode","undefined","editEdge","deleteNode","deleteEdge","shapeProperties","borderDashes","useImageSize","useBorderWithImage","controlNodeStyle","background","border","highlight","borderWidth","borderWidthSelected","height","myFunction","console","log","_jsx","_Fragment","children","_jsxs","Grid","item","md","style","display","nodeData","map","el","draggable","flexDirection","borderRadius","width","justifyContent","alignItems","onDragEnd","src","Network","graph","ref","events","click","event","getNetwork","network","on","ctx","forEach","node","iconImg","Image","nodeId","nodePosition","getPositions","nodeSize","setVal","sessionStorage","getItem","font","fillStyle","textAlign","shadowColor","shadowBlur","fillRect","x","y","fillText","iconWidth","iconHeight","drawImage","addEventListener","fontSize","fontFamily","Button","variant","onClick","e","setItem","current","updateGraph","JSON","stringify","jsonString","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","revokeObjectURL","removeChild","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a57bbbfc.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Network from \"react-vis-network-graph\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\n// import \"./network.css\";\nimport nodeData from \"./data.json\";\n\nfunction App() {\n  const graphRef = useRef(null);\n  const [datas, setDatas] = useState(\"--\");\n  const _data = {\n    nodes: [\n      {\n        id: \"AWS\",\n        name: \"AWS\",\n        label: \"1\",\n        title: \"AWS\",\n        shape: \"image\",\n        image:\n          \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR4qneFgROiufDyIrsXWpq_GhoQWnnxHuoclPljXeXgtlcGEParu75dPQ4TLafJeLJssXc&usqp=CAU\",\n        size: 20,\n        cost: \"$1000\"\n      },\n      {\n        id: \"IBM\",\n        color: \"blue\",\n        shape: \"image\",\n        label: \"2\",\n        title: \"IBM\",\n        image:\n          \"https://upload.wikimedia.org/wikipedia/commons/2/24/IBM_Cloud_logo.png\",\n        size: 20,\n        cost: \"$1000\"\n      },\n      {\n        id: \"SQL\",\n        color: \"blue\",\n        shape: \"image\",\n        title: \"SQL\",\n        label: \"3\",\n        image:\n          \"https://thumbs.dreamstime.com/b/sql-database-icon-logo-design-ui-ux-app-orange-inscription-shadow-96841969.jpg\",\n        size: 20,\n        cost: \"$1000\"\n      },\n      {\n        id: \"S3\",\n        color: \"blue\",\n        shape: \"image\",\n        // label:\"Node 2\",\n        title: \"S3\",\n        label: \"4\",\n        image: \"https://sonraisecurity.com/wp-content/uploads/aws-s3-icon.png\",\n        size: 20,\n        cost: \"$1000\"\n      },\n      {\n        id: \"Azure\",\n        color: \"blue\",\n        shape: \"image\",\n        // label:\"Node 3\",\n        label: \"5\",\n        title: \"Azure\",\n        image:\n          \"https://www.openbravo.com/blog/wp-content/uploads/2020/03/azure-cloud.jpg\",\n        size: 20,\n        cost: \"$1000\"\n      },\n      {\n        id: \"MongoDB\",\n        color: \"blue\",\n        shape: \"image\",\n\n        label: \"6\",\n        title: \"MongoDB\",\n        image: \"https://cyclr.com/wp-content/uploads/2022/03/ext-553.png\",\n        size: 20,\n        cost: \"$1000\"\n      },\n      {\n        id: \"ELB\",\n        color: \"purple\",\n        shape: \"image\",\n\n        label: \"7\",\n        title: \"ELB\",\n        image:\n          \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSZPd9rU5qaOuUmt2qwyBi6u_Xrn4PMV21SXNdHj2Me65OgDCStw4chydnmGa0-s1a7e_w&usqp=CAU\",\n        size: 20,\n        cost: \"$1000\"\n      },\n      {\n        id: \"Saas\",\n        color: \"purple\",\n        shape: \"image\",\n\n        label: \"8\",\n        title: \"Saas\",\n        image: \"https://ongoingwarehouse.com/Pictures/MicrosoftTeams-image.png\",\n        size: 20,\n        cost: \"$1000\"\n      },\n      {\n        id: \"Notion\",\n        color: \"purple\",\n        shape: \"image\",\n\n        label: \"9\",\n        title: \"Notion\",\n        image:\n          \"https://cdn.icon-icons.com/icons2/2429/PNG/512/notion_logo_icon_147257.png\",\n        size: 20,\n        cost: \"$1000\"\n      },\n      {\n        id: \"Appengine\",\n        label: \"10\",\n        color: \"purple\",\n        title: \"Appengine\",\n        shape: \"image\",\n        image:\n          \"https://www.howtogeek.com/wp-content/uploads/csit/2020/06/29add7ff.png?height=200p&trim=2,2,2,2\",\n        size: 20,\n        cost: \"$1000\"\n      },\n      {\n        id: \"Sematext\",\n        label: \"11\",\n        color: \"purple\",\n        title: \"Sematext\",\n        shape: \"image\",\n        image:\n          \"https://images.g2crowd.com/uploads/product/image/social_landscape/social_landscape_d6fa77d54b71a3a68842371d85aba442/sematext-cloud.jpg\",\n        size: 20,\n        cost: \"$1000\"\n      },\n      {\n        id: \"Jenkins\",\n        label: \"12\",\n        color: \"purple\",\n        title: \"Jenkins\",\n        shape: \"image\",\n        image:\n          \"https://www.learntek.org/blog/wp-content/uploads/2018/05/jenkins_image.png\",\n        size: 20,\n        cost: \"$1000\"\n      },\n      {\n        id: \"Githup\",\n        label: \"13\",\n        color: \"purple\",\n        title: \"Githup\",\n        shape: \"image\",\n        image: \"https://foundations.projectpythia.org/_images/GitHub-logo.png\",\n        size: 20,\n        cost: \"$1000\"\n      }\n    ],\n    edges: [\n      { from: \"AWS\", to: \"IBM\", color: \"red\" },\n      { from: \"AWS\", to: \"SQL\", color: \"red\" },\n      { from: \"IBM\", to: \"S3\", color: \"red\" },\n      { from: \"IBM\", to: \"Azure\", color: \"red\" },\n      { from: \"IBM\", to: \"MongoDB\", color: \"red\" },\n      { from: \"MongoDB\", to: \"AWS\", color: \"red\" },\n      { from: \"Azure\", to: \"MongoDB\", color: \"red\" },\n      { from: \"MongoDB\", to: \"ELB\", color: \"red\" },\n      { from: \"AWS\", to: \"ELB\", color: \"purple\" },\n      { from: \"ELB\", to: \"Saas\", color: \"purple\" },\n      { from: \"Saas\", to: \"Notion\", color: \"purple\" },\n      { from: \"Notion\", to: \"Appengine\", color: \"purple\" },\n      { from: \"Githup\", to: \"Jenkins\", color: \"purple\" },\n      { from: \"Sematext\", to: \"Appengine\", color: \"purple\" },\n      { from: \"Githup\", to: \"Sematext\", color: \"purple\" },\n      { from: \"Sematext\", to: \"AWS\", color: \"purple\" },\n      { from: \"Jenkins\", to: \"ELB\", color: \"purple\" }\n    ]\n  };\n\n  const [data, setData] = useState(_data);\n\n  const options = {\n    interaction: {\n      selectable: true,\n      hover: true\n    },\n    manipulation: {\n      enabled: true,\n      initiallyActive: true,\n      addNode: false,\n      addEdge: false,\n      /*  Adding new node to the graph */\n      // addNode: (data) => {\n      //   // console.log(callback,\"callback\")\n      //   console.log(\"Addnode is called for dragginggg.........\");\n      //   console.log(data, \"before main console\");\n      //   data.id = newId;\n      //   data.image = newImage;\n      //   data.label = newLabel;\n      //   data.size = imgsize;\n      //   data.title = newTitle;\n      //   data.shape = \"image\";\n      //   // if (typeof callback === \"function\") {\n      //   // callback(data); // }\n      //   // callback(data);\n      //   setId(\"\");\n      //   setLabel(\"\");\n      //   setTitle(\"\");\n      //   setImage(\"\");\n      //   setImgsize(\"\");\n      //   console.log(data, \"myData\");\n      //   console.log(graphRef, \"mygraphical\");\n      // },\n      // addEdge: true,\n      editNode: undefined,\n      editEdge: true,\n      deleteNode: true,\n      deleteEdge: true,\n      shapeProperties: {\n        borderDashes: false,\n        useImageSize: false,\n        useBorderWithImage: false\n      },\n      controlNodeStyle: {\n        shape: \"dot\",\n        size: 6,\n        color: {\n          background: \"#ff0000\",\n          border: \"#3c3c3c\",\n          highlight: {\n            background: \"#07f968\",\n            border: \"#3c3c3c\"\n          },\n          borderWidth: 2,\n          borderWidthSelected: 2\n        }\n      },\n      height: \"100%\",\n      color: \"green\",\n      hover: \"true\",\n      nodes: {\n        size: 20\n      }\n    }\n  };\n  function myFunction() {\n    // Code for your onclick function goes here\n    console.log(\"Icon image clicked!\");\n  }\n  const handleZoomIn = () => {\n    if (graphRef.current) {\n      // graphRef.current.zoomIn();\n    }\n  };\n  const handleNodeClick = (event) => {\n    console.log(\"click event is happened\");\n    console.log(\"click event is happened in handlenode click\");\n    console.log(event);\n    setDatas(event.nodes[0]);\n  };\n\n  // Function to zoom out\n  const handleZoomOut = () => {\n    if (graphRef.current) {\n      // graphRef.current.zoomOut();\n    }\n  };\n\n  return (\n    <>\n      <Grid>\n        <Grid item md={2}>\n          <div style={{ display: \"flex\" }}>\n            {nodeData.nodes.map((el) => {\n              return (\n                <div\n                  draggable={true}\n                  key={el.id}\n                  data-label={el.label}\n                  data-name={el.name}\n                  data-image={el.image}\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    borderRadius: \"20%\",\n                    width: \"50px\",\n                    height: \"50px\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                  }}\n                  onDragEnd={() => {\n                    setData({\n                      nodes: [\n                        ...data.nodes,\n                        {\n                          id: el.id,\n                          name: el.name,\n                          shape: \"image\",\n                          image: el.image,\n                          size: 15,\n                          label: el.label\n                        }\n                      ],\n                      edges: [...data.edges, { from: el.id, to: \"AWS\" }]\n                    });\n                  }}\n                >\n                  <img src={el.image} width=\"60%\" height=\"60%\" />\n                </div>\n              );\n            })}\n          </div>\n        </Grid>\n\n        <Grid item md={7} style={{ display: \"flex\" }}>\n          <Network\n            graph={data}\n            ref={graphRef}\n            options={options}\n            events={{\n              click: handleNodeClick\n            }}\n            getNetwork={(network) => {\n              network.on(\"afterDrawing\", (ctx) => {\n                data.nodes.forEach((node) => {\n                  const iconImg = new Image();\n                  iconImg.src =\n                    \"https://www.iconarchive.com/download/i22783/kyo-tux/phuzion/Sign-Info.ico\";\n                  const nodeId = node.id;\n                  const nodePosition = network.getPositions([nodeId])[nodeId];\n                  const nodeSize = 20;\n                  var setVal = sessionStorage.getItem(\"set\");\n                  if (setVal === \"yes\") {\n                    console.log(setVal);\n                    ctx.font = \"14px Arial\";\n                    ctx.fillStyle = \"#000000\";\n                    ctx.textAlign = \"center\";\n                    ctx.shadowColor = \"rgba(0, 0, 0, 0.5)\";\n                    ctx.shadowBlur = 5;\n                    ctx.fillStyle = \"#ffcc00\";\n                    ctx.fillRect(\n                      nodePosition.x + nodeSize + 2,\n                      nodePosition.y + nodeSize - 20,\n                      50,\n                      20\n                    );\n                    ctx.fillText(\n                      node.label,\n                      nodePosition.x,\n                      nodePosition.y + nodeSize + 20\n                    );\n                    ctx.font = \"12px Arial\";\n                    ctx.color = \"black\";\n                    ctx.fillStyle = \"black\";\n                    ctx.textAlign = \"left\";\n                    ctx.fillText(\n                      node.cost,\n                      nodePosition.x + nodeSize + 5,\n                      nodePosition.y + nodeSize - 5\n                    );\n                  } else if (setVal === \"no\") {\n                    console.log(setVal);\n                    const iconWidth = 20; // width of the icon image\n                    const iconHeight = 16;\n                    iconImg.src =\n                      \"https://www.iconarchive.com/download/i22783/kyo-tux/phuzion/Sign-Info.ico\";\n                    ctx.font = \"14px Arial\";\n                    ctx.fillStyle = \"#000000\";\n                    ctx.textAlign = \"center\";\n                    ctx.shadowColor = \"rgba(0, 0, 0, 0.5)\";\n                    ctx.shadowBlur = 5;\n                    ctx.fillStyle = \"#ffcc00\";\n                    ctx.drawImage(\n                      iconImg,\n                      nodePosition.x + nodeSize + 5,\n                      nodePosition.y + nodeSize + 5,\n                      iconWidth,\n                      iconHeight\n                    );\n                    iconImg.addEventListener(\"mouseover\", myFunction, \"false\");\n                  }\n                });\n              });\n            }}\n            style={{ display: \"flex\", height: \"40rem\" }}\n          />\n        </Grid>\n        <Grid item md={3}>\n          <div>\n            <p\n              style={{\n                fontSize: \"2rem\",\n                color: \"blue\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                fontFamily: \"Verdana\"\n              }}\n            >\n              <b>Service Name</b>\n            </p>\n            <p\n              style={{\n                fontSize: \"1.5rem\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                fontFamily: \"Verdana\"\n              }}\n            >\n              <b>{datas}</b>\n            </p>\n          </div>\n        </Grid>\n        <Grid\n          item\n          md={12}\n          style={{ display: \"flex\", justifyContent: \"space-around\" }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={(e) => {\n              sessionStorage.setItem(\"set\", \"yes\");\n              graphRef.current.updateGraph();\n            }}\n          >\n            Price Tagger\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={(e) => {\n              sessionStorage.setItem(\"set\", \"no\");\n              graphRef.current.updateGraph();\n            }}\n          >\n            Cura\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              console.log(data, \"hujhgh\");\n              console.log(JSON.stringify(data), \"########\");\n              const jsonString = JSON.stringify(data, null, 2); // Using null, 2 for pretty formatting\n\n              // Create a Blob from the JSON string\n              const blob = new Blob([jsonString], { type: \"application/json\" });\n\n              // Create a URL for the Blob\n              const url = URL.createObjectURL(blob);\n\n              // Create a link element to download the JSON file\n              const link = document.createElement(\"a\");\n              link.href = url;\n              link.download = \"data.json\";\n              document.body.appendChild(link);\n              link.click();\n\n              // Clean up by revoking the URL and removing the link element\n              URL.revokeObjectURL(url);\n              document.body.removeChild(link);\n            }}\n          >\n            Fetch updated data\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}